name: MCU
# run workflow on git push
on: [push]
jobs:
  test:
    name: Cypress run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # GitHub Action for running Cypress end-to-end tests
        uses: actions/checkout@v2
      # because of "record" and "parallel" parameters these containers will load balance all found tests among themselves
      - name: Cypress run
        uses: cypress-io/github-action@v3
        with:
          # just perform install
          runTests: false
        # Install NPM dependencies, cache them correctly and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v3
        with:
          # installed in previous workflow
          install: false
          # Cypress path from root
          working-directory: mcu
          # relative to working directory root
          config-file: cypress.config.js
          record: true
        env:
          # pass the Dashboard project id as an environment variable
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # - if the event is push, the title will be undefined and Cypress will get the commit message from Git information
          # - if the event is pull_request, then we set the commit message to the pull request title
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          #This will allow Cypress bot to show in addition to status checks
          COMMIT_INFO_SHA: ${{ github.event.pull_request.head.sha }}